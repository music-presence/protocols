syntax = "proto3";

// For definitions of terms used in this file check the Glossary in the spec.

package media_channel;

import "jsonschema.proto";
option go_package = "github.com/utrack/pubg-jsonschema/pkg/schema";

// Information identifying the source of Media Metadata.
// This can e.g. be a Plugin in a media player, a browser extension
// or the Application that is playing the media directly.
message MediaSource {

  // An arbitrary identifier of the Media Source (Plugin or Application) that
  // is reporting the media. A meaningful value should be chosen for this ID.
  // Example: "github.com/ungive/foo_mediacontrol" (foobar2000 plugin)
  // Example: "github.com/ungive/media-control-extension" (browser extension)
  // Example: "your-app-name" (standalone application, not a plugin)
  string id = 1 [
    json_name = "id",
    (pubg.jsonschema.field) = {
      string : {
        pattern : "^[a-zA-Z][a-zA-Z0-9+-_/\\.]*$",
      }
    }
  ];

  // A user-friendly, easy-to-read display name for this Media Source.
  // Should be the name of the Plugin or Application that is known to the user.
  // Example: "foo_mediacontrol" (foobar2000 plugin)
  // Example: "Media Control" (browser extension)
  // Example: "Your App Name" (standalone application)
  optional string name = 2 [
    json_name = "name",
    (pubg.jsonschema.field) = {
      string : {
        pattern : "^[ -~]+$",
      }
    }
  ];

  // An identifier of this Plugin's instance. This is used to disambiguate
  // multiple instances of the same Media Source, in case they have the same
  // value in the "id" field. An example for this may be a browser extension
  // that is running in multiple browsers (Applications) on the same device.
  // May only contain alphanumeric characters and underscores.
  // This field is optional.
  // Examples: "google_chrome", "firefox", "INSTANCE_1" or "1"
  optional string instance_id = 3 [
    json_name = "instance_id",
    (pubg.jsonschema.field) = {
      string : {
        pattern : "^[a-zA-Z0-9_]+$",
      }
    }
  ];

  // The name of the Application instance that is playing the media, if any.
  // Should be set if a Plugin that is running as part of the Application
  // is reporting the Media Metadata on behalf of the Application.
  // Should not be set if the Application is reporting the media directly,
  // as the application name should already be set in the "name" field.
  // Example: "foobar2000", "Google Chrome" or "Firefox"
  optional string application_name = 4 [
    json_name = "application_name",
    (pubg.jsonschema.field) = {
      string : {
        pattern : "^[ -~]+$",
      }
    }
  ];

  // Identifiers that were used in the past by this Media Source.
  // Communicating these is useful when e.g. a repository URL is used
  // as an ID, but the repository moved to a different URL.
  // Example: ["github.com/user/old_repo"]
  repeated string deprecated_ids = 5 [
    json_name = "deprecated_ids",
    (pubg.jsonschema.field) = {
      string : {
        pattern : "^[a-zA-Z][a-zA-Z0-9+-_/\\.]*$",
      }
    }
  ];
}

// First message sent by an Application to the Hub upon connecting.
// Sends metadata about the Application that is connecting to the Hub.
message Hello { // ->
  // Description of the Media Source that connected to the Hub.
  MediaSource media_source = 1;
}
